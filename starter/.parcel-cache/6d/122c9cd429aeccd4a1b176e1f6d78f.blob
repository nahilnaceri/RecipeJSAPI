"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _view = _interopRequireDefault(require("./view.js"));

var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Pagination extends _view.default {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "_parentElement", document.querySelector('.pagination'));

    _defineProperty(this, "_nextButton", document.querySelector('.pagination__btn--next'));

    _defineProperty(this, "_prevButton", document.querySelector('.pagination__btn--prev'));
  }

  handleButtonClick(handler) {
    this._parentElement.addEventListener('click', function (e) {
      const btn = e.target.closest('.btn--inline');
      if (!btn) return;
      console.log(btn);
      const pageTo = Math.parseint(btn.dataset.page);
      console.log(pageTo);
      handler();
    });
  }

  _generateMarkup() {
    const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage); //page 1 and there are other pages

    if (this._data.currPage === 1 && numPages > 1) {
      return `
    <button data-page="${this._data.currPage + 1}" class="btn--inline pagination__btn--next">
      <span>Page ${this._data.currPage + 1}</span>
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-right"></use>
      </svg>
    </button>`;
    } // last page


    if (this._data.currPage === numPages && numPages > 1) {
      return `<button data-page="${this._data.currPage - 1}" class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>Page ${this._data.currPage - 1}</span>
    </button>
  `;
    } // other page


    if (this._data.currPage < numPages) {
      return `<button data-page="${this._data.currPage - 1}" class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>Page ${this._data.currPage - 1}</span>
    </button>
    <button data-page="${this._data.currPage + 1}" class="btn--inline pagination__btn--next">
      <span>Page ${this._data.currPage + 1}</span>
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-right"></use>
      </svg>
    </button>`;
    }

    return '';
  }

  nextHandler(handler) {}

}

var _default = new Pagination();

exports.default = _default;